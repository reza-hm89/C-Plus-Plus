using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Graph1
{
    public class SportsmanNode
    {
        private String Name;
        private String Family;
        private String FatherName;
        private String MembershipDate;
        private String CreditDate;
        private UInt32 Credit;
        private UInt32 BirthCertificateNo;
        private UInt32 NationalNo;
        private UInt32 ID;
        private UInt16 BirthYear;
        private Boolean Football;
        private Boolean Valyball;
        private Boolean Wrestle;
        private Boolean Tekvando;
        private Boolean Swiming;
        private SportsmanNode left, right;
        
        public SportsmanNode(String name,String family,String father,String memDate,String cerDate,
                                                UInt32 cer,UInt32 BirthNo,UInt32 NationNo,UInt16 BirYear)
        {
            Name = name;
            Family = family;
            FatherName = father;
            MembershipDate = memDate;
            CreditDate = cerDate;
            Credit = cer;
            BirthCertificateNo = BirthNo;
            NationalNo = NationNo;
            BirthYear = BirYear;
            left = right = null;
        }

        public String name
        {
            get 
            {
                return Name;
            }
            set
            {
                Name = value;
            }
        }

        public String family
        {
            get
            {
                return Family;
            }
            set
            {
                Family = value;
            }
        }

        public String fatherName
        {
            get
            {
                return FatherName;
            }
            set
            {
                FatherName = value;
            }
        }

        public String membershipDate
        {
            get
            {
                return MembershipDate;
            }
            set
            {
                MembershipDate = value;
            }
        }

        public String creditDate
        {
            get
            {
                return CreditDate;
            }
            set
            {
                CreditDate = value;
            }
        }

        public UInt32 credit
        {
            get
            {
                return Credit;
            }
            set
            {
                Credit = value;
            }
        }

        public UInt32 birthCertificateNo
        {
            get
            {
                return BirthCertificateNo;
            }
            set
            {
                BirthCertificateNo = value;
            }
        }

        public UInt32 nationalNo
        {
            get
            {
                return NationalNo;
            }
            set
            {
                NationalNo = value;
            }
        }

        public UInt32 id
        {
            get
            {
                return ID;
            }
            set
            {
                ID = value;
            }
        }

        public UInt16 birthYear
        {
            get
            {
                return BirthYear;
            }
            set
            {
                BirthYear = value;
            }
        }

        public Boolean football
        {
            get
            {
                return Football;
            }
            set
            {
                Football = value;
            }
        }

        public Boolean valyball
        {
            get
            {
                return Valyball;
            }
            set
            {
                Valyball = value;
            }
        }

        public Boolean wrestle
        {
            get
            {
                return Wrestle;
            }
            set
            {
                Wrestle = value;
            }
        }

        public Boolean tekvando
        {
            get
            {
                return Tekvando;
            }
            set
            {
                Tekvando = value;
            }
        }

        public Boolean swiming
        {
            get
            {
                return Swiming;
            }
            set
            {
                Swiming = value;
            }
        }

        public SportsmanNode Left
        {
            get
            {
                return left;
            }
            set
            {
                left = value;
            }
        }

        public SportsmanNode Right
        {
            get
            {
                return right;
            }
            set
            {
                right = value;
            }
        }
    }
 
    //**************************************************************************
    //**************************************************************************

    public class BST:frmGetdata
    {
        private SportsmanNode root;
        public BST()
        {
            root = null;
        }

        public Boolean Insert(UInt32 ID)
        {
            SportsmanNode p, q;
            p = root;
            q = null;
            while (p)
            {
                q = p;
                if (p.id==ID)
                {
                    return false;
                }
                if (p.id<ID)
                {
                    p = p.Right;
                }
                else
                {
                    p = p.Left;
                }
                p = new SportsmanNode(txtName, txtFamily, txtFatherName, mskMembershipDate.Text,
                    mskCreditDate.Text, cer, mskBirthCertificateNo.Text, mskNationalNo.Text, mskBirthYear.Text);
                if (root==null)
                {
                    root = p;
                }
                if(q.id<ID)
                {
                    q.Right = p;
                }
                else
                {
                    q.Left = p;
                }
                return true;
            }
        } //end of Insert()

        SportsmanNode Search(UInt32 ID)
        {
            SportsmanNode p = root;
            while (p)
            {
                if (p.id==ID)
                {
                    return p;
                }
                if (p.id<ID)
                {
                    p = p.Right;
                }
                else
                {
                    p = p.Left;
                }
                return null;
            }
        } //end of Search()

        SportsmanNode Search(String Family)
        {
            SportsmanNode p = root;
            

        }

    } //end of BST class
}
